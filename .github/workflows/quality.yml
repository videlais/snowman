name: Code Quality

on:
  push:
    branches: [ 1.X ]
  pull_request:
    branches: [ 1.X ]

jobs:
  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better analysis
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests with coverage
      run: npm test -- --coverage --coverageReporters=lcov
      
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      continue-on-error: true

  package-analysis:
    name: Package Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check for outdated packages
      run: npm outdated || true
      
    - name: Analyze bundle size
      run: |
        npm run build
        ls -lah dist/
        
    - name: Check package vulnerabilities
      run: npm audit --audit-level moderate

  maintenance:
    name: Maintenance Tasks
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check for outdated dependencies
      id: outdated-check
      run: |
        echo "## Outdated Dependencies Report" > outdated-report.md
        if npm outdated --long >> outdated-report.md; then
          echo "has_outdated=false" >> $GITHUB_OUTPUT
        else
          echo "has_outdated=true" >> $GITHUB_OUTPUT
        fi
        
    - name: Create issue for outdated dependencies
      if: steps.outdated-check.outputs.has_outdated == 'true'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('outdated-report.md', 'utf8');
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Outdated Dependencies Report - ' + new Date().toISOString().split('T')[0],
            body: report,
            labels: ['maintenance', 'dependencies']
          });