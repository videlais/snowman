name: Code Coverage

# Only run on main branch and PRs to main to reduce redundant coverage runs
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  coverage:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2 

    - name: Set up Node.js 22.x
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        cache: 'npm'
        
    - name: Restore compiled e2e files cache
      uses: actions/cache@v4
      with:
        path: |
          test/e2e/**/*.html
        key: e2e-compiled-${{ hashFiles('test/e2e/**/*.twee', 'dist/format.js') }}
        restore-keys: |
          e2e-compiled-

    - name: Install dependencies
      run: npm install
      
    - name: Install ExTwee for e2e tests
      run: npm install -g extwee

    - name: Build and package
      run: npm run package
      
    - name: Run unit tests with coverage
      run: npm run test:unit
      
    - name: Compile quick e2e test files (excludes slow timing tests)
      run: |
        chmod +x ./compile-e2e-tests.sh
        # Only compile fast tests for coverage to avoid timeouts
        find test/e2e -name "*.twee" -not -path "*/Timed-Passages/*" -not -path "*/Loading-Screen/*" -not -path "*/Typewriter-Effect/*" | while read file; do
          dir=$(dirname "$file")
          base=$(basename "$file" .twee)
          echo "Compiling: $file -> $dir/$base.html"
          if extwee -s dist/format.js -i "$file" -c -o "$dir/$base.html"; then
            echo "✅ Successfully compiled $file"
          else
            echo "❌ Failed to compile $file"
            exit 1
          fi
        done
      
    - name: Run quick e2e tests (excludes slow timing tests)
      run: npm run test:e2e -- --testPathIgnorePatterns="Timed-Passages|Loading-Screen|Typewriter-Effect"
      env:
        CI: true
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}